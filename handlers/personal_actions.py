from tkinter import Text

from aiogram import types
from dispatcher import dp
import config
import re
from bot import BotDB
from aiogram import Bot, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup



@dp.message_handler(commands="start")
async def start(message: types.Message):

    bot = Bot(token=config.BOT_TOKEN)
    me = await bot.get_me()

    if (not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(message.from_user.id,
        (f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name} üëã –Ø {me.first_name} –ø–æ–º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –í–∞—à –≤–æ–ø—Ä–æ—Å. –ß—Ç–æ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å?"))

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    buttons = ["–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", "FAQ", "–û –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–µ"]
    keyboard.add(*buttons)
    await message.answer((f"–ß–µ–≥–æ –∂–µ–ª–∞–µ—Ç–µ, {message.from_user.first_name}?"), reply_markup=keyboard)


@dp.message_handler(lambda message: message.text == "FAQ")
async def without_puree(message: types.Message):
    await message.answer("–§–∞–∫—å—é")


@dp.message_handler(lambda message: message.text == "–û –∑–∞–ø–æ–≤–µ–¥–Ω–∏–∫–µ")
async def without_puree(message: types.Message):
    await message.answer("–ë–ª–∞ –±–ª–∞ –±–ª–∞")



# –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–Ω–∫–µ—Ç—ã

class FSMAnket(StatesGroup):
    columns = {"user_id": State(), "full_name": State(), "date_of_application": State(), "mail": State(),
               "birthday": State(), "phone_number": State(), "education": State(), "territory": State(),
               "arrival_date": State(), "departure_date": State(), "lang": State(), "experience": State(),
               "skills": State(), "recommendations": State(), "volunteer_book": State(), "pitch": State(),
               "video": State(), "reviewed": State()}


# –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
@dp.message_handler(lambda message: message.text == "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∑–∞—è–≤–∫—É", state=None)
async def cm_start(message: types.Message):
    await FSMAnket.columns.get("full_name").set()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –§–ò–û")


# –ì—Ä—É–∑–∏–º –§–ò–û
@dp.message_handler(state=FSMAnket.columns.get("full_name"))
async def load_fio(message: types.Message, state: FSMContext):
    BotDB.add_information(message.from_user.id, "full_name", message.text)
    await FSMAnket.next()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É")


# –õ–æ–≤–∏–º –≤—Ç–æ—Ä–æ–π –æ—Ç–≤–µ—Ç - –ø–æ—á—Ç—É
@dp.message_handler(state=FSMAnket.columns.get("mail"))
async def load_mail(message: types.Message, state: FSMContext):
    BotDB.add_information(message.from_user.id, "mail", message.text)
    await FSMAnket.next()
    await message.answer("B")

@dp.message_handler(state=FSMAnket.columns.get("mail"))
async def load_mail(message: types.Message, state: FSMContext):
    # –∑–∞–≥—Ä—É–∑–∫–∞ –≤ –ë–î

    await FSMAnket.next()
    await message.answer("–í–≤–µ–¥–∏—Ç–µ —á–æ—Ç–æ-—Ç–∞–º")


