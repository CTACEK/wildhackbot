import telebot
import config
import random
# import sqlite3
from telebot import types
from database import *

bot = telebot.TeleBot(config.token)

# connect = sqlite3.connect('servicedata.db')
# cursor = connect.cursor()


# def create():
#     cursor.execute("""CREATE TABLE IF NOT EXISTS servicedata(
#             id_data integer PRIMARY KEY,
#             value_data INTEGER
#     )""")
#
#     connect.commit()
#
#
# def delete_db():
#     cursor.execute("DROP TABLE servicedata")
#     connect.commit()
#     # cursor.close()
#
#
# def search_db():
#     cursor.execute("SELECT * FROM users")
#     all_results = cursor.fetchall()
#     print(all_results[0][1])


# def add(database,id,value):
#     data = [id, value]
#     cursor.execute("INSERT INTO database VALUES(?,?);", data)
#     connect.commit()


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('main2.jpg', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("‚ú® –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ")
    item3 = types.KeyboardButton("–û –°–æ–∑–¥–∞—Ç–µ–ª—å–Ω–∏—Ü–µ ‚ù§Ô∏è")

    markup.add(item1, item2, item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –º–∏—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∏ –≤–æ–ª—à–µ–±—Å—Ç–≤–∞".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(commands=['admin'])
def access(message):
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞:")
    bot.register_next_step_handler(send, check)


def check(message):
    if message.text == password:
        adminka(message)
    else:
        bot.send_message(message.chat.id, "–ò–¥–∏ –æ—Ç—Å—é–¥–∞ –ø–∞–¥–ª–∞, —Ç—ã –Ω–µ –æ–¥–º–µ–Ω")


def adminka(message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    admin1 = types.KeyboardButton("–í–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ")
    admin2 = types.KeyboardButton("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    admin3 = types.KeyboardButton("–ù–∞ –Ω–∞—á–∞–ª–æ")
    admin4 = types.KeyboardButton("–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å")
    keyboard.add(admin1, admin2, admin3, admin4)
    request = bot.send_message(message.chat.id, "–í—ã –≤–æ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –æ–¥–º–µ–Ω–∞", reply_markup=keyboard)
    sti = open('keksi.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.register_next_step_handler(request, adminmenu)


def passrequest(message):
    request = bot.send_message(message.chat.id, "–£–≤–µ—Ä–µ–Ω –≤ —Å–º–µ–Ω–µ –ø–∞—Ä–æ–ª—è?")
    bot.register_next_step_handler(request, perehod)


def perehod(message):
    yes = ['–î–∞', '–¥–∞', '–∞–≥–∞', '–ê–≥–∞']
    no = ['–ù–µ—Ç', '–Ω–µ—Ç', '–Ω–µ–∞']
    if message.text in yes:
        changepass(message)
    elif message.text in no:
        bot.send_message(message.chat.id, "–ù—É –∏ –ª–∞–¥–Ω–æ")
        adminka(message)


def changepass(message):
    global password
    passwo = bot.send_message(message.chat.id, "–ü—Ä–∏–¥—É–º–∞–π –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å")
    bot.register_next_step_handler(passwo, change)


def change(message):
    global password
    if message.text != '':
        password = str(message.text)
        bot.send_message(message.chat.id, f"–ü–∞—Ä–æ–ª—å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ '{password}'")
        adminka(message)
    else:
        changepass(message)


def adminmenu(message):
    global preds_count, random_count
    if message.text == '–í–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ':
        preds = bot.send_message(message.chat.id, str(f'–í–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ (—Å–Ω–∞—á–∞–ª–∞ –Ω–æ–º–µ—Ä :)'))
        bot.register_next_step_handler(preds, addpreds)
        # data = [id, value]
        # cursor.execute("INSERT INTO predicts VALUES(?,?);", data)
        # connect.commit()



    elif message.text == '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å':
        passrequest(message)


    elif message.text == '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        bot.send_message(message.chat.id, str(
            f'–ö–Ω–æ–ø–∫—É —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –Ω–∞–∂–∞–ª–æ {random_count} —Ä–∞–∑\n–°–≤–æ—ë –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É–∑–Ω–∞–ª–æ —É–∂–µ {preds_count} —Ä–∞–∑'))
        wait(message)


    elif message.text == '–ù–∞ –Ω–∞—á–∞–ª–æ':
        welcome(message)

    else:
        bot.send_message(message.chat.id, f'–¢—ã –∫–∞–∫–æ–π-—Ç–æ —Å—Ç—Ä–∞–Ω–Ω—ã–π, –∏–¥–∏ –ª—É—á—à–µ –Ω–∞ —Å—Ç–∞—Ä—Ç')
        welcome(message)


def wait(message):
    waiting = bot.send_message(message.chat.id, str(f'–§—Ç–æ –¥–∞–ª—å—Ñ–µ, –∫–µ–ø?'))
    bot.register_next_step_handler(waiting, adminmenu)


def addpreds(message):
    global preds
    temp = str(message.text)
    preds[str(len(preds.keys()) + 1)] = temp
    bot.send_message(message.chat.id, str(f'–í –±–∞–Ω–∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –¥–æ–±–∞–≤–ª–µ–Ω–æ: {temp}'))
    wait(message)


@bot.message_handler(content_types=['text'])
def processingoperations(message):
    global preds_count, random_count
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
            random_count += 1
        elif message.text == '‚ú® –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ':
            bot.send_message(message.chat.id, str(preds[str(random.randint(1, len(preds)))]))
            preds_count += 1
        elif message.text == '–û –°–æ–∑–¥–∞—Ç–µ–ª—å–Ω–∏—Ü–µ ‚ù§Ô∏è':
            bot.send_message(message.chat.id, str(
                '–ü—Ä–∏–≤–µ—Ç—É–ª–∏, –Ø - –î–∞—Ä—å—è, –∏–ª–∏ –∂–µ –°–æ–∑–¥–∞—Ç–µ–ª—å–Ω–∏—Ü–∞ —ç—Ç–æ–≥–æ –≤–æ–ª—à–µ–±–Ω–æ–≥–æ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å–∫–∞–∂–µ—Ç –í–∞–º –≤–∞—à–µ –±—É–¥—É—â–µ–µ üîÆü§≠\n–Ø —É—á—É—Å—å –≤ 11 –∫–ª–∞—Å—Å–µ –∏ —ç—Ç–æ —Ç–∞–∫ —Ç—è–∂–µ–ª–æ, —á—Ç–æ –Ø –±—ã–ª–∞ –≤—ã–Ω—É–∂–¥–µ–Ω–∞ —Å–æ–∑–¥–∞—Ç—å –±–æ—Ç–∞-–º–∏–ª–∞—à–∫—É, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –í–∞–º —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ–µ –±—É–¥—É—â–µ–µ ‚ù§'))
            sti = open('profile.jpg', 'rb')
            bot.send_sticker(message.chat.id, sti)
        elif message.text == '–ü–∞—Ä–æ–ª—å' or message.text == '–ø–∞—Ä–æ–ª—å':
            bot.send_message(message.chat.id, f'–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –æ—Ç –∞–¥–º–∏–Ω–∫–∏: "{password}"')
        elif message.text == '–ö–µ–∫—Å':
            stisw = open('keksi.webp', 'rb')
            bot.send_sticker(message.chat.id, stisw)
        else:
            bot.send_message(message.chat.id, '–£ –º–µ–Ω—è –Ω–µ—Ç —Ç–∞–∫–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ üò¢')


if __name__ == '__main__':
    bot.infinity_polling()
